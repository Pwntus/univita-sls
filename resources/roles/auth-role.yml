Type: AWS::IAM::Role
Properties:
  Path: /${self:service}/${self:provider.stage}/
  RoleName: ${self:provider.stage}-AuthRole
  AssumeRolePolicyDocument:
    Version: '2012-10-17'
    Statement:
      # Assume Lambda role
      - Effect: Allow
        Principal:
          Service:
            - lambda.amazonaws.com
        Action: sts:AssumeRole
      # Assume Federated identity role
      - Effect: Allow
        Principal:
          Federated:
            - cognito-identity.amazonaws.com
        Action: sts:AssumeRoleWithWebIdentity
        Condition:
          StringEquals:
            cognito-identity.amazonaws.com:aud:
              Ref: IdentityPool
          ForAnyValue:StringLike:
            cognito-identity.amazonaws.com:amr: authenticated
            #cognito-identity.amazonaws.com:amr: accounts.google.com
  Policies:
    - PolicyName: defaultPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:

          # Allow lambda to log
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              Fn::Join:
                - ':'
                - - arn:aws:logs
                  - Ref: AWS::Region
                  - Ref: AWS::AccountId
                  - log-group:/aws/lambda/*:*:*

          # Allow assumed role to invoke API Gateway
          - Effect: Allow
            Action:
              - execute-api:Invoke
            Resource:
              - '*'
              